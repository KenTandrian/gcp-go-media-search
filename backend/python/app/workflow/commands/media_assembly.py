from ..base import Command, Context
from ... import models

class MediaAssembly(Command):
    """
    A command to assemble the final Media object from the MediaSummary.
    """
    def __init__(self, name: str, media_param: str = "media", summary_param: str = "media_summary"):
        super().__init__(name)
        self.media_param = media_param
        self.summary_param = summary_param

    def is_executable(self, context: Context) -> bool:
        """
        Ensures that both the Media and MediaSummary objects exist in the context.
        """
        return context.get(self.media_param) is not None and context.get(self.summary_param) is not None

    def execute(self, context: Context):
        """
        Transfers the data from the MediaSummary to the Media object.
        """
        print("Assembling final media object...")
        media = context.get(self.media_param)
        summary = context.get(self.summary_param)

        if not isinstance(media, models.Media) or not isinstance(summary, models.MediaSummary):
            raise TypeError("Invalid types for media or summary in context.")

        # Transfer the fields from the summary to the main media object.
        media.title = summary.title
        media.category = summary.category
        media.summary = summary.summary
        media.length_in_seconds = summary.length_in_seconds
        media.director = summary.director
        media.release_year = summary.release_year
        media.genre = summary.genre
        media.rating = summary.rating
        media.cast = summary.cast
        
        # In a real application, the scenes would be generated by another command
        # based on the scene_time_stamps. For now, we'll create dummy scenes.
        for i, time_span in enumerate(summary.scene_time_stamps):
            media.scenes.append(models.Scene(
                sequence_number=i + 1,
                start=time_span.start,
                end=time_span.end,
                script=f"This is the script for scene {i + 1}."
            ))

        print("Successfully assembled final media object.")
